{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","Components/Trending.js","Components/Home.js","Navbar/Navbar.js","Footer/Footer.js","Components/Results.js","Components/MovieCard.js","Components/Upcoming.js","Components/Watchlist.js","Components/Genres.js","Components/Movies.js","Components/ShowCard.js","Components/Shows.js","App.js","index.js"],"names":["AppReducer","state","action","type","watchlist","payload","filter","item","id","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addToWatchlist","removeFromWatchlist","children","Trending","useContext","className","data","map","content","src","poster_path","alt","title","name","vote_average","media_type","overview","onClick","disabled","find","m","Home","useState","trending","setTrending","axios","get","then","res","results","Navbar","query","setQuery","history","useHistory","to","placeholder","onChange","event","preventDefault","target","push","Footer","Results","useParams","setContent","pageNumber","setPageNumber","pages","setPages","total_pages","previousLabel","nextLabel","onPageChange","selected","pageCount","marginPagesDisplayed","pageRangeDisplayed","containerClassName","pageClassName","pageLinkClassName","previousLinkClassName","previousClassName","nextClassName","nextLinkClassName","MovieCard","movies","movie","release_date","Upcoming","setMovies","pageNum","setPageNum","console","log","Watchlist","Genres","selectedGenres","setSelectedGenres","genres","setGenres","setPage","selectedGenre","genre","s","g","handleAddGenre","Movies","genreUrl","length","reduce","acc","curr","makeGenreUrl","ShowCard","shows","show","first_air_date","Shows","setShows","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6dd394f.chunk.js","sourcesContent":["const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM_TO_WATCHLIST\":\r\n      return {\r\n        ...state,\r\n        watchlist: [action.payload, ...state.watchlist],\r\n      };\r\n    case \"REMOVE_ITEM_FROM_WATCHLIST\":\r\n      return {\r\n        ...state,\r\n        watchlist: state.watchlist.filter(\r\n          (item) => item.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AppReducer;","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nconst initialState = {\r\n  watchlist: localStorage.getItem(\"watchlist\")\r\n    ? JSON.parse(localStorage.getItem(\"watchlist\"))\r\n    : [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\r\n  }, [state]);\r\n\r\n  const addToWatchlist = (item) => {\r\n    dispatch({ type: \"ADD_ITEM_TO_WATCHLIST\", payload: item });\r\n  };\r\n\r\n  const removeFromWatchlist = (id) => {\r\n    dispatch({ type: \"REMOVE_ITEM_FROM_WATCHLIST\", payload: id });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        watchlist: state.watchlist,\r\n        addToWatchlist,\r\n        removeFromWatchlist,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import \"./Movies.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nexport default function Trending(props) {\r\n  const { addToWatchlist, watchlist } = useContext(GlobalContext);\r\n  return (\r\n    // Maps out the movies into movie cards\r\n    // Card displays poster, title, ratings and release date\r\n    <div className=\"card-container\">\r\n      {props.data.map((content) => (\r\n        <div className=\"card\" key={content.id}>\r\n          <div className=\"card-image\">\r\n            <img\r\n              src={\"https://image.tmdb.org/t/p/original\" + content.poster_path}\r\n              alt=\"\"\r\n            ></img>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <b className=\"title\">\r\n                {!content.title ? content.name : content.title}\r\n              </b>\r\n            </div>\r\n            <div className=\"ratingDate\">\r\n              <span>{content.vote_average}&#11088;</span>\r\n              <span>{content.media_type === \"movie\" ? \"Movie\" : \"Show\"}</span>\r\n            </div>\r\n            <div className=\"movie-overview\">\r\n              <h2>Overview</h2>\r\n              <p>{content.overview}</p>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => addToWatchlist(content)}\r\n                // button disabled if show/movie found in watchlist already.\r\n                disabled={watchlist.find((m) =>\r\n                  m.id === content.id ? true : false\r\n                )}\r\n              >\r\n                Add to watchlist\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Trending from \"./Trending\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// HomePage displays trending shows and movies\r\nexport default function Home() {\r\n  const [trending, setTrending] = useState([]);\r\n  useEffect(() => {\r\n    // Gets trending movies / shows from API\r\n    axios.get(\"/api\").then((res) => {\r\n      setTrending(res.data.results);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"col\">\r\n        <h3>Trending now!</h3>\r\n      </div>\r\n      <Trending data={trending} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nexport default function Navbar() {\r\n  const [query, setQuery] = useState(\"\");\r\n  // Whenever user changes the search string in the input it updates the query value.\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    setQuery(event.target.value);\r\n  };\r\n  const history = useHistory();\r\n  // Clicking the search button redirects you to the results page\r\n  const handleHistory = () => {\r\n    history.push(`/search/${query}`);\r\n  };\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        Home\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#collapsibleNavbar\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"input-group\">\r\n        <div className=\"form-outline\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            value={query}\r\n            onChange={onChange}\r\n          ></input>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleHistory}\r\n        >\r\n          <i className=\"fa fa-search\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/movies\" className=\"nav-link\">\r\n              Movies\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/shows\" className=\"nav-link\">\r\n              Shows\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/upcoming\" className=\"nav-link\">\r\n              Upcoming\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/watchlist\" className=\"nav-link\">\r\n              Watchlist\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./Footer.css\";\nexport default function Footer() {\n  return (\n    <footer className=\"bg-dark text-center text-white\">\n      <div className=\"container\">\n        <div className=\"text-center p-3\">©</div>\n      </div>\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Trending from \"./Trending\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useParams } from \"react-router-dom\";\r\nexport default function Results() {\r\n  const { query } = useParams();\r\n  const [content, setContent] = useState([]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pages, setPages] = useState(0);\r\n  // Gets all the tv shows and movies with the given search query, pagenumber for pagination.\r\n  useEffect(() => {\r\n    axios.get(`/api/search?query=${query}&page=${pageNumber}`).then((res) => {\r\n      setContent(res.data.results);\r\n      setPages(res.data.total_pages);\r\n    });\r\n  }, [pageNumber, query]);\r\n\r\n  const handlePageClick = (data) => {\r\n    setPageNumber(data.selected + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"col\">{<h3>Results of {query}:</h3>}</div>\r\n      <Trending data={content} />\r\n      <ReactPaginate\r\n        previousLabel={\"Previous\"}\r\n        nextLabel=\"Next\"\r\n        onPageChange={handlePageClick}\r\n        pageCount={pages}\r\n        marginPagesDisplayed={3}\r\n        pageRangeDisplayed={5}\r\n        containerClassName={\"pagination justify-content-center\"}\r\n        pageClassName={\"page-item\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        previousClassName={\"page-item\"}\r\n        nextClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"./Movies.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nexport default function MovieCard(props) {\r\n  const { addToWatchlist, watchlist } = useContext(GlobalContext);\r\n  return (\r\n    // Maps out the movies into movie cards\r\n    // Card displays poster, title, ratings and release date\r\n    <div className=\"card-container\">\r\n      {props.movies.map((movie) => (\r\n        <div className=\"card\" key={movie.id}>\r\n          <div className=\"card-image\">\r\n            <img\r\n              src={\"https://image.tmdb.org/t/p/original\" + movie.poster_path}\r\n              alt=\"\"\r\n            ></img>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <b className=\"title\">{movie.title}</b>\r\n            </div>\r\n            <div className=\"ratingDate\">\r\n              <span>{movie.vote_average}&#11088;</span>\r\n              <span>{movie.release_date}</span>\r\n            </div>\r\n            <div className=\"movie-overview\">\r\n              <h2>Overview</h2>\r\n              <p>\r\n                {movie.overview === \"\"\r\n                  ? \"No overview available!\"\r\n                  : movie.overview}\r\n              </p>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => addToWatchlist(movie)}\r\n                // button is disabled if the movie is already found in the watchlist.\r\n                disabled={watchlist.find((m) =>\r\n                  m.id === movie.id ? true : false\r\n                )}\r\n              >\r\n                Add to watchlist\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// HomePage displays the most popular shows and movies\r\nexport default function Upcoming() {\r\n  const pages = 10;\r\n  const [movies, setMovies] = useState([]);\r\n  const [pageNum, setPageNum] = useState(1);\r\n  useEffect(() => {\r\n    // Gets upcoming movies\r\n    axios.get(`/api/upcoming?page=${pageNum}`).then((res) => {\r\n      setMovies(res.data.results);\r\n      console.log(res.data.results);\r\n    });\r\n  }, [pageNum]);\r\n\r\n  // Clicking the button in pagination bar sets current page to the one selected.\r\n  const handlePageClick = (data) => {\r\n    setPageNum(data.selected + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"col\">\r\n        <h3>Upcoming movies</h3>\r\n      </div>\r\n      <MovieCard movies={movies} />\r\n      <ReactPaginate\r\n        previousLabel={\"Previous\"}\r\n        nextLabel=\"Next\"\r\n        onPageChange={handlePageClick}\r\n        pageCount={pages}\r\n        marginPagesDisplayed={3}\r\n        pageRangeDisplayed={5}\r\n        containerClassName={\"pagination justify-content-center\"}\r\n        pageClassName={\"page-item\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        previousClassName={\"page-item\"}\r\n        nextClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function Watchlist() {\r\n  const { watchlist, removeFromWatchlist } = useContext(GlobalContext);\r\n  return (\r\n    <div>\r\n      <div className=\"col\">\r\n        <h3>Watchlist</h3>\r\n      </div>\r\n      <div className=\"card-container\">\r\n        {watchlist.map((content) => (\r\n          <div className=\"card\" key={content.id}>\r\n            <div className=\"card-image\">\r\n              <img\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/original\" + content.poster_path\r\n                }\r\n                alt=\"\"\r\n              ></img>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <b className=\"title\">\r\n                  {!content.title ? content.name : content.title}\r\n                </b>\r\n              </div>\r\n              <div className=\"ratingDate\">\r\n                <span>{content.vote_average}&#11088;</span>\r\n                <span>{content.media_type === \"movie\" ? \"Movie\" : \"Show\"}</span>\r\n              </div>\r\n              <div className=\"movie-overview\">\r\n                <h2>Overview: </h2>\r\n                <p>{content.overview}</p>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => removeFromWatchlist(content.id)}\r\n                >\r\n                  Remove from watchlist\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\nimport React from \"react\";\nimport \"./Genres.css\";\nimport { useEffect } from \"react\";\nexport default function Genres({\n  selectedGenres,\n  setSelectedGenres,\n  genres,\n  setGenres,\n  type,\n  setPage,\n}) {\n  // Adds the selected genre to selectedGenres and removes it from genres.\n  const handleAddGenre = (genre) => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres.filter((g) => g.id !== genre.id));\n    setPage(1);\n  };\n  // Removes the selected genre from selectedGenres and adds it back to genres.\n  const handleRemoveGenre = (genre) => {\n    setSelectedGenres(selectedGenres.filter((s) => s.id !== genre.id));\n    setGenres([...genres, genre]);\n    setPage(1);\n  };\n  // If the type given to Genre is movie, it gets the movie genres, if its tv it gets all the tv show genres.\n  useEffect(() => {\n    if (type === \"movie\") {\n      axios.get(\"/api/moviegenres\").then((res) => {\n        setGenres(res.data.genres);\n      });\n    } else if (type === \"tv\") {\n      axios.get(\"/api/showgenres\").then((res) => {\n        setGenres(res.data.genres);\n      });\n    }\n    return () => {\n      setGenres({});\n    };\n  }, [setGenres, type]);\n  // Maps over selectedGenres and genres to create buttons for them.\n  return (\n    <div className=\"tags\">\n      {selectedGenres.map((selectedGenre) => (\n        <button\n          key={selectedGenre.id}\n          className=\"tagSelected\"\n          onClick={() => handleRemoveGenre(selectedGenre)}\n        >\n          {selectedGenre.name}\n        </button>\n      ))}\n      {genres.map((genre) => (\n        <button\n          className=\"tag\"\n          key={genre.id}\n          onClick={() => handleAddGenre(genre)}\n        >\n          {genre.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport ReactPaginate from \"react-paginate\";\nimport Genres from \"./Genres\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// HomePage displays the most popular shows and movies\nexport default function Movies() {\n  const [pages, setPages] = useState(10);\n  const [movies, setMovies] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  // with_genres accepts the genres like this \"genre.id, genre1.id, genre2.id...\"\n  // Function goes through the selectedGenres and creates a suitable string.\n  const makeGenreUrl = (selectedGenres) => {\n    if (selectedGenres.length < 1) {\n      return \"\";\n    }\n    const genreIds = selectedGenres.map((g) => g.id);\n    return genreIds.reduce((acc, curr) => acc + \",\" + curr);\n  };\n\n  const genreUrl = makeGenreUrl(selectedGenres);\n\n  useEffect(() => {\n    // Gets all the movies sorted by popularity, and by the genre u want\n    axios\n      .get(`/api/popularmovies?page=${pageNum}&with_genres=${genreUrl}`)\n      .then((res) => {\n        setMovies(res.data.results);\n        setPages(res.data.total_pages);\n      });\n  }, [genreUrl, pageNum]);\n\n  const handlePageClick = (data) => {\n    setPageNum(data.selected + 1);\n  };\n  return (\n    <div>\n      <Genres\n        type=\"movie\"\n        selectedGenres={selectedGenres}\n        genres={genres}\n        setGenres={setGenres}\n        setSelectedGenres={setSelectedGenres}\n        setPage={setPageNum}\n      />\n      <MovieCard movies={movies} />\n      <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel=\"Next\"\n        onPageChange={handlePageClick}\n        pageCount={pages}\n        marginPagesDisplayed={3}\n        pageRangeDisplayed={5}\n        containerClassName={\"pagination justify-content-center\"}\n        pageClassName={\"page-item\"}\n        pageLinkClassName={\"page-link\"}\n        previousLinkClassName={\"page-link\"}\n        previousClassName={\"page-item\"}\n        nextClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n      />\n    </div>\n  );\n}\n","import \"./Movies.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nexport default function ShowCard(props) {\r\n  const { addToWatchlist, watchlist } = useContext(GlobalContext);\r\n  return (\r\n    // Maps out the shows into show cards\r\n    // card displays poster, name, ratings and first air date\r\n    <div className=\"card-container\">\r\n      {props.shows.map((show) => (\r\n        <div className=\"card\" key={show.id}>\r\n          <div className=\"card-image\">\r\n            <img\r\n              src={\"https://image.tmdb.org/t/p/original\" + show.poster_path}\r\n              alt=\"\"\r\n            ></img>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <b className=\"title\">{show.name}</b>\r\n            </div>\r\n            <div className=\"ratingDate\">\r\n              <span>{show.vote_average}&#11088;</span>\r\n              <span>{show.first_air_date}</span>\r\n            </div>\r\n            <div className=\"movie-overview\">\r\n              <h2>Overview</h2>\r\n              <p>\r\n                {show.overview === \"\"\r\n                  ? \"No overview available!\"\r\n                  : show.overview}\r\n              </p>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => addToWatchlist(show)}\r\n                // Button is disabled if the show is already found in the watchlist\r\n                disabled={watchlist.find((m) =>\r\n                  m.id === show.id ? true : false\r\n                )}\r\n              >\r\n                Add to watchlist\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport ShowCard from \"./ShowCard\"\nimport Genres from \"./Genres\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// HomePage displays the most popular shows and movies\nexport default function Shows() {\n  const [pages, setPages] = useState(10);\n  const [pageNum, setPageNum] = useState(1);\n  const [shows, setShows] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  // with_genres accepts the genres like this \"genre.id, genre1.id, genre2.id...\"\n  // Function goes through the selectedGenres and creates a suitable string.\n  const makeGenreUrl = (selectedGenres) => {\n    if (selectedGenres.length < 1) {\n      return \"\";\n    }\n    const genreIds = selectedGenres.map((g) => g.id);\n    return genreIds.reduce((acc, curr) => acc + \",\" + curr);\n  };\n  const genreUrl = makeGenreUrl(selectedGenres);\n\n  useEffect(() => {\n    // Gets all the tv shows sorted by popularity and the genres you want\n    axios\n      .get(`/api/popularshows?page=${pageNum}&with_genres=${genreUrl}`)\n      .then((res) => {\n        setShows(res.data.results);\n        setPages(res.data.total_pages);\n      });\n  }, [genreUrl, pageNum]);\n  const handlePageClick = (data) => {\n    setPageNum(data.selected + 1);\n  };\n  return (\n    <div>\n      <Genres\n        type=\"tv\"\n        selectedGenres={selectedGenres}\n        genres={genres}\n        setGenres={setGenres}\n        setSelectedGenres={setSelectedGenres}\n        setPage={setPageNum}\n      />\n      <ShowCard shows={shows} />\n      <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel=\"Next\"\n        onPageChange={handlePageClick}\n        pageCount={pages}\n        marginPagesDisplayed={3}\n        pageRangeDisplayed={5}\n        containerClassName={\"pagination justify-content-center\"}\n        pageClassName={\"page-item\"}\n        pageLinkClassName={\"page-link\"}\n        previousLinkClassName={\"page-link\"}\n        previousClassName={\"page-item\"}\n        nextClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n      />\n    </div>\n  );\n}\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport Results from \"./Components/Results\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\nimport Upcoming from \"./Components/Upcoming\";\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\nimport Watchlist from \"./Components/Watchlist\";\r\nimport Movies from \"./Components/Movies\";\r\nimport Shows from \"./Components/Shows\";\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <BrowserRouter>\r\n        <div className=\"wrapper\">\r\n          <Navbar />\r\n          <div className=\"parent\">\r\n            <div className=\"content\">\r\n              <Switch>\r\n                <Route path=\"/upcoming\" component={Upcoming}></Route>\r\n                <Route path=\"/movies\" component={Movies}></Route>\r\n                <Route path=\"/shows\" component={Shows}></Route>\r\n                <Route path=\"/watchlist\" component={Watchlist}></Route>\r\n                <Route path=\"/search/:query\" component={Results}></Route>\r\n                <Route path=\"/\" component={Home}></Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}